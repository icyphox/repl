#!/usr/bin/env bash

show_help() {
	echo "Usage: repl [options] command"
	echo ""
	echo "Options:"
	echo "    --help/-h    Display this message"
	echo "    --stdin      Pipe input to command's stdin"
	echo ""
	echo "Examples:"
	echo "    $ repl git"
	echo "    $ repl --stdin bc"
}

if [ "$#" -lt 1 ]
then
	show_help
	exit
fi

cmd=()

for arg
do
	case $arg in
		--stdin )
			stdin=1;;
		--help|-h )
			show_help
			exit 1;;
		* )
			# We use printf to quote everything because we eval this later and don't want things being expanded twice
			cmd+=("$(printf '%q' "$arg")");;
	esac
done

storage="$HOME/.repl"
mkdir -p "$storage"

if command -v rlwrap 2>&1 >/dev/null && [ -z "$USING_RLWRAP" ]
then
	export USING_RLWRAP=1
	rlwrap_cmd=(rlwrap -H "$storage/$1.hist" -- "$0" "$@")
	exec "${rlwrap_cmd[@]}"
fi

echo "Use Ctrl+C or Ctrl+D to quit"

if [ -n "$stdin" ]; then
	exec "${cmd[@]}"
fi

while read -r -p "$1% " input
do
	# eval is evil, but we use it here because $input needs expanded by the shell
	eval "${cmd[@]}" "$input"
done
